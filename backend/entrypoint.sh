#!/bin/sh
set -e

echo "üöÄ Starting Loop-It Backend (Final Robust Version)..."

echo "‚è≥ Waiting for database..."
while ! nc -z postgres 5432; do
  sleep 1
done
echo "‚úÖ Database is ready!"

echo "üì¶ Installing postgresql-client..."
apk add --no-cache postgresql-client

echo "üîç Testing database connection..."
if ! PGPASSWORD="$POSTGRES_PASSWORD" psql -h "$DB_HOST" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 1;" > /dev/null 2>&1; then
    echo "‚ùå Database connection failed"
    exit 1
fi
echo "‚úÖ Database connection successful"

echo "üóÑÔ∏è Existing tables BEFORE migration:"
PGPASSWORD="$POSTGRES_PASSWORD" psql -h "$DB_HOST" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "\dt" 2>/dev/null || echo "No tables"

echo "üöÄ Executing schema sync..."
npm run db:migrate

if [ $? -eq 0 ]; then
    echo "‚úÖ Schema sync successful"
else
    echo "‚ùå Schema sync failed"
    exit 1
fi

echo "‚ÑπÔ∏è Skipping manual foreign key fixes ‚Äî handled by Drizzle migrations"


echo "üîç Final validation..."
if ! PGPASSWORD="$POSTGRES_PASSWORD" psql -h "$DB_HOST" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT \"creatorId\" FROM universes LIMIT 1;" > /dev/null 2>&1; then
    echo "‚ùå Schema validation failed"
    exit 1
fi

echo "üìä Final database status:"
echo "- Tables: $(PGPASSWORD="$POSTGRES_PASSWORD" psql -h "$DB_HOST" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public';" | xargs)"
echo "- Foreign Keys: $(PGPASSWORD="$POSTGRES_PASSWORD" psql -h "$DB_HOST" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -t -c "SELECT COUNT(*) FROM information_schema.table_constraints WHERE constraint_type = 'FOREIGN KEY';" | xargs)"

echo "üéØ Backend ready to start!"
exec npm start