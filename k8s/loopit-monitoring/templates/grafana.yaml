{{- if .Values.grafana.enabled }}
# Grafana Secret
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "loopit-monitoring.fullname" . }}-grafana-secrets
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "loopit-monitoring.grafana.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
type: Opaque
data:
  admin-user: {{ .Values.grafana.admin.user | b64enc }}
  admin-password: {{ .Values.grafana.admin.password | b64enc }}
  secret-key: {{ include "loopit-monitoring.grafana.secretKey" . }}

---
# Grafana DataSources ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "loopit-monitoring.fullname" . }}-grafana-datasources
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "loopit-monitoring.grafana.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      {{- if .Values.grafana.datasources.prometheus.enabled }}
      - name: Prometheus
        type: prometheus
        access: proxy
        url: {{ .Values.grafana.datasources.prometheus.url }}
        isDefault: {{ .Values.grafana.datasources.prometheus.isDefault }}
        editable: true
        jsonData:
          httpMethod: POST
          manageAlerts: true
          prometheusType: Prometheus
          prometheusVersion: 2.47.0
      {{- end }}
      {{- if .Values.grafana.datasources.loki.enabled }}
      - name: Loki
        type: loki
        access: proxy
        url: {{ .Values.grafana.datasources.loki.url }}
        isDefault: false
        editable: true
        jsonData:
          maxLines: 1000
      {{- end }}

---
# Grafana Dashboard Providers ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "loopit-monitoring.fullname" . }}-grafana-dashboard-providers
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "loopit-monitoring.grafana.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
data:
  dashboardproviders.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards

---
{{- if .Values.persistence.enabled }}
# Grafana PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "loopit-monitoring.fullname" . }}-grafana-pvc
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "loopit-monitoring.grafana.labels" . | nindent 4 }}
  {{- with .Values.persistence.grafana.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  accessModes:
    - {{ .Values.persistence.grafana.accessMode }}
  {{- $storageClass := include "loopit-monitoring.storageClass" (dict "storageClass" .Values.persistence.grafana.storageClass "Values" .Values) }}
  {{- if $storageClass }}
  storageClassName: {{ $storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.persistence.grafana.size }}

---
{{- end }}
# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "loopit-monitoring.fullname" . }}-grafana
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "loopit-monitoring.grafana.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "loopit-monitoring.grafana.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "loopit-monitoring.grafana.selectorLabels" . | nindent 8 }}
      {{- with .Values.podAnnotations.grafana }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- include "loopit-monitoring.securityContext" (dict "securityContext" .Values.securityContext.grafana) | nindent 6 }}
      containers:
      - name: grafana
        image: {{ include "loopit-monitoring.image" (dict "registry" .Values.global.imageRegistry "repository" .Values.grafana.image.repository "tag" .Values.grafana.image.tag "global" .Values.global) }}
        imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
        ports:
        - containerPort: 3000
          name: http
        env:
        # Auth (aus Secrets)
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "loopit-monitoring.fullname" . }}-grafana-secrets
              key: admin-user
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "loopit-monitoring.fullname" . }}-grafana-secrets
              key: admin-password
        
        # Server Settings f√ºr CLEAN URLs
        - name: GF_SERVER_DOMAIN
          value: "{{ .Values.grafana.server.domain }}"
        - name: GF_SERVER_ROOT_URL
          value: "{{ .Values.grafana.server.rootUrl }}"
        - name: GF_SERVER_SERVE_FROM_SUB_PATH
          value: "{{ .Values.grafana.server.serveFromSubPath }}"
        
        # Security Settings
        - name: GF_SECURITY_COOKIE_SECURE
          value: "{{ .Values.grafana.security.cookieSecure }}"
        - name: GF_SECURITY_COOKIE_SAMESITE
          value: "{{ .Values.grafana.security.cookieSamesite }}"
        
        # User Management
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "{{ .Values.grafana.users.allowSignUp }}"
        - name: GF_USERS_ALLOW_ORG_CREATE
          value: "{{ .Values.grafana.users.allowOrgCreate }}"
        - name: GF_USERS_AUTO_ASSIGN_ORG
          value: "{{ .Values.grafana.users.autoAssignOrg }}"
        - name: GF_USERS_AUTO_ASSIGN_ORG_ROLE
          value: "{{ .Values.grafana.users.autoAssignOrgRole }}"
        
        # Authentication
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "{{ .Values.grafana.auth.anonymousEnabled }}"
        - name: GF_AUTH_BASIC_ENABLED
          value: "{{ .Values.grafana.auth.basicEnabled }}"
        - name: GF_AUTH_DISABLE_LOGIN_FORM
          value: "{{ .Values.grafana.auth.disableLoginForm }}"
        
        # Logging
        - name: GF_LOG_LEVEL
          value: "info"
        - name: GF_LOG_MODE
          value: "console"
        
        # Provisioning
        - name: GF_PATHS_PROVISIONING
          value: "/etc/grafana/provisioning"
        
        # Plugins
        {{- if .Values.grafana.plugins.install }}
        - name: GF_INSTALL_PLUGINS
          value: "{{ join "," .Values.grafana.plugins.install }}"
        {{- end }}
        
        volumeMounts:
        {{- if .Values.persistence.enabled }}
        - name: grafana-storage
          mountPath: /var/lib/grafana
        {{- end }}
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboard-providers
          mountPath: /etc/grafana/provisioning/dashboards
        
        {{- include "loopit-monitoring.resources" .Values.grafana | nindent 8 }}
        {{- include "loopit-monitoring.healthCheck" (dict "healthCheck" .Values.healthChecks.grafana "port" 3000) | nindent 8 }}
        {{- include "loopit-monitoring.securityContext" (dict "securityContext" .Values.securityContext.grafana) | nindent 8 }}
      
      volumes:
      {{- if .Values.persistence.enabled }}
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: {{ include "loopit-monitoring.fullname" . }}-grafana-pvc
      {{- else }}
      - name: grafana-storage
        emptyDir: {}
      {{- end }}
      - name: grafana-datasources
        configMap:
          name: {{ include "loopit-monitoring.fullname" . }}-grafana-datasources
      - name: grafana-dashboard-providers
        configMap:
          name: {{ include "loopit-monitoring.fullname" . }}-grafana-dashboard-providers
      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: {{ include "loopit-monitoring.fullname" . }}-grafana
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "loopit-monitoring.grafana.labels" . | nindent 4 }}
  annotations:
    {{- include "loopit-monitoring.serviceAnnotations" (dict "serviceAnnotations" .Values.podAnnotations.grafana "Values" .Values) | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  selector:
    {{- include "loopit-monitoring.grafana.selectorLabels" . | nindent 4 }}
  ports:
  - port: 3000
    targetPort: 3000
    name: http
{{- end }}