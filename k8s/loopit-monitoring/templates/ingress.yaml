{{- if .Values.ingress.enabled }}
# Monitoring Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "loopit-monitoring.fullname" . }}-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "loopit-monitoring.labels" . | nindent 4 }}
    app.kubernetes.io/component: ingress
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  rules:
  {{- if .Values.grafana.enabled }}
  # Grafana auf monitoring.localhost
  - host: {{ .Values.ingress.hosts.grafana }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ include "loopit-monitoring.fullname" . }}-grafana
            port:
              number: 3000
  {{- end }}
  
  {{- if .Values.prometheus.enabled }}
  # Prometheus auf prometheus.localhost
  - host: {{ .Values.ingress.hosts.prometheus }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ include "loopit-monitoring.fullname" . }}-prometheus
            port:
              number: 9090
  {{- end }}
  
  {{- if .Values.loki.enabled }}
  # Loki auf loki.localhost
  - host: {{ .Values.ingress.hosts.loki }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ include "loopit-monitoring.fullname" . }}-loki
            port:
              number: 3100
  {{- end }}

  {{- if .Values.ingress.fallback.enabled }}
  # Fallback auf localhost mit Pfad-basiertem Routing
  - host: {{ .Values.ingress.fallback.host }}
    http:
      paths:
      {{- if .Values.grafana.enabled }}
      - path: {{ .Values.ingress.fallback.paths.grafana }}
        pathType: Prefix
        backend:
          service:
            name: {{ include "loopit-monitoring.fullname" . }}-grafana
            port:
              number: 3000
      {{- end }}
      {{- if .Values.prometheus.enabled }}
      - path: {{ .Values.ingress.fallback.paths.prometheus }}
        pathType: Prefix
        backend:
          service:
            name: {{ include "loopit-monitoring.fullname" . }}-prometheus
            port:
              number: 9090
      {{- end }}
      {{- if .Values.loki.enabled }}
      - path: {{ .Values.ingress.fallback.paths.loki }}
        pathType: Prefix
        backend:
          service:
            name: {{ include "loopit-monitoring.fullname" . }}-loki
            port:
              number: 3100
      {{- end }}
  {{- end }}

{{- if .Values.backend.autoAnnotate }}
---
# Backend Services fÃ¼r Monitoring konfigurieren (Job)
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "loopit-monitoring.fullname" . }}-backend-annotate
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "loopit-monitoring.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend-annotate
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      serviceAccountName: {{ include "loopit-monitoring.prometheus.serviceAccountName" . }}
      restartPolicy: Never
      containers:
      - name: annotate-backend
        image: bitnami/kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "Annotating backend services for Prometheus scraping..."
          {{- range .Values.backend.services }}
          
          # Try to annotate {{ .name }} in {{ .namespace }}
          if kubectl get service {{ .name }} -n {{ .namespace }} >/dev/null 2>&1; then
            echo "Found service {{ .name }} in {{ .namespace }}, adding annotations..."
            kubectl annotate service {{ .name }} -n {{ .namespace }} \
              prometheus.io/scrape="true" \
              prometheus.io/port="{{ .port }}" \
              prometheus.io/path="{{ .path }}" \
              --overwrite=true
            echo "Successfully annotated {{ .name }}/{{ .namespace }}"
          else
            echo "Service {{ .name }} not found in {{ .namespace }}, skipping..."
          fi
          {{- end }}
          
          echo "Backend service annotation completed!"
{{- end }}
{{- end }}