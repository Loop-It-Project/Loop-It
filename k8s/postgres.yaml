apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: loopit-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:17
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: "loop-it"
        - name: POSTGRES_USER
          value: "loop_user"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: loopit-secrets
              key: postgres-password
        
        # HEALTH CHECKS für PostgreSQL
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - loop_user
            - -d
            - loop-it
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - loop_user
            - -d
            - loop-it
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        
        # Resource Management
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        
        # Persistent Storage
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-storage
        emptyDir: {}  # Für lokale Entwicklung, später PVC
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: loopit-dev
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres