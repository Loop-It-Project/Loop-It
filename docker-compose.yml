services:
  postgres:
    image: postgres:17
    container_name: loop-it-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-loop-it}
      POSTGRES_USER: ${POSTGRES_USER:-loop_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  # MUST be set in .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-loop_user} -d ${POSTGRES_DB:-loop-it}"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - loop-it-network

  backend:
    build:
      context: ./backend
    container_name: loop-it-backend
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-loop_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-loop-it}
      PORT: 3000
      NODE_ENV: ${NODE_ENV:-production}
      # CRITICAL: These MUST be set in .env file
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      # Frontend CORS
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost}
      # Database connection variables
      DB_HOST: postgres
      DB_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER:-loop_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-loop-it}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - loop-it-network

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:3000}
        VITE_APP_NAME: ${VITE_APP_NAME:-Loop-It}
    container_name: loop-it-frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    networks:
      - loop-it-network

volumes:
  postgres_data:

networks:
  loop-it-network:
    driver: bridge